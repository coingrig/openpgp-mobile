// automatically generated by the FlatBuffers compiler, do not modify

/**
 * @const
 * @namespace
 */
var model = model || {};

/**
 * @enum {number}
 */
model.Hash = {
  HASH_UNSPECIFIED: 0,
  HASH_SHA256: 1,
  HASH_SHA224: 2,
  HASH_SHA384: 3,
  HASH_SHA512: 4
};

/**
 * @enum {string}
 */
model.HashName = {
  '0': 'HASH_UNSPECIFIED',
  '1': 'HASH_SHA256',
  '2': 'HASH_SHA224',
  '3': 'HASH_SHA384',
  '4': 'HASH_SHA512'
};

/**
 * @enum {number}
 */
model.Compression = {
  COMPRESSION_UNSPECIFIED: 0,
  COMPRESSION_NONE: 1,
  COMPRESSION_ZLIB: 2,
  COMPRESSION_ZIP: 3
};

/**
 * @enum {string}
 */
model.CompressionName = {
  '0': 'COMPRESSION_UNSPECIFIED',
  '1': 'COMPRESSION_NONE',
  '2': 'COMPRESSION_ZLIB',
  '3': 'COMPRESSION_ZIP'
};

/**
 * @enum {number}
 */
model.Cipher = {
  CIPHER_UNSPECIFIED: 0,
  CIPHER_AES128: 1,
  CIPHER_AES192: 2,
  CIPHER_AES256: 3
};

/**
 * @enum {string}
 */
model.CipherName = {
  '0': 'CIPHER_UNSPECIFIED',
  '1': 'CIPHER_AES128',
  '2': 'CIPHER_AES192',
  '3': 'CIPHER_AES256'
};

/**
 * @constructor
 */
model.EncryptRequest = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {model.EncryptRequest}
 */
model.EncryptRequest.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {model.EncryptRequest=} obj
 * @returns {model.EncryptRequest}
 */
model.EncryptRequest.getRootAsEncryptRequest = function(bb, obj) {
  return (obj || new model.EncryptRequest).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {model.EncryptRequest=} obj
 * @returns {model.EncryptRequest}
 */
model.EncryptRequest.getSizePrefixedRootAsEncryptRequest = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new model.EncryptRequest).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
model.EncryptRequest.prototype.message = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
model.EncryptRequest.prototype.publicKey = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {model.KeyOptions=} obj
 * @returns {model.KeyOptions|null}
 */
model.EncryptRequest.prototype.options = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? (obj || new model.KeyOptions).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {model.Entity=} obj
 * @returns {model.Entity|null}
 */
model.EncryptRequest.prototype.signed = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? (obj || new model.Entity).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {model.FileHints=} obj
 * @returns {model.FileHints|null}
 */
model.EncryptRequest.prototype.fileHints = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? (obj || new model.FileHints).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
model.EncryptRequest.startEncryptRequest = function(builder) {
  builder.startObject(5);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} messageOffset
 */
model.EncryptRequest.addMessage = function(builder, messageOffset) {
  builder.addFieldOffset(0, messageOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} publicKeyOffset
 */
model.EncryptRequest.addPublicKey = function(builder, publicKeyOffset) {
  builder.addFieldOffset(1, publicKeyOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} optionsOffset
 */
model.EncryptRequest.addOptions = function(builder, optionsOffset) {
  builder.addFieldOffset(2, optionsOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} signedOffset
 */
model.EncryptRequest.addSigned = function(builder, signedOffset) {
  builder.addFieldOffset(3, signedOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} fileHintsOffset
 */
model.EncryptRequest.addFileHints = function(builder, fileHintsOffset) {
  builder.addFieldOffset(4, fileHintsOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
model.EncryptRequest.endEncryptRequest = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} messageOffset
 * @param {flatbuffers.Offset} publicKeyOffset
 * @param {flatbuffers.Offset} optionsOffset
 * @param {flatbuffers.Offset} signedOffset
 * @param {flatbuffers.Offset} fileHintsOffset
 * @returns {flatbuffers.Offset}
 */
model.EncryptRequest.createEncryptRequest = function(builder, messageOffset, publicKeyOffset, optionsOffset, signedOffset, fileHintsOffset) {
  model.EncryptRequest.startEncryptRequest(builder);
  model.EncryptRequest.addMessage(builder, messageOffset);
  model.EncryptRequest.addPublicKey(builder, publicKeyOffset);
  model.EncryptRequest.addOptions(builder, optionsOffset);
  model.EncryptRequest.addSigned(builder, signedOffset);
  model.EncryptRequest.addFileHints(builder, fileHintsOffset);
  return model.EncryptRequest.endEncryptRequest(builder);
}

/**
 * @constructor
 */
model.EncryptBytesRequest = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {model.EncryptBytesRequest}
 */
model.EncryptBytesRequest.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {model.EncryptBytesRequest=} obj
 * @returns {model.EncryptBytesRequest}
 */
model.EncryptBytesRequest.getRootAsEncryptBytesRequest = function(bb, obj) {
  return (obj || new model.EncryptBytesRequest).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {model.EncryptBytesRequest=} obj
 * @returns {model.EncryptBytesRequest}
 */
model.EncryptBytesRequest.getSizePrefixedRootAsEncryptBytesRequest = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new model.EncryptBytesRequest).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {number} index
 * @returns {number}
 */
model.EncryptBytesRequest.prototype.message = function(index) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readUint8(this.bb.__vector(this.bb_pos + offset) + index) : 0;
};

/**
 * @returns {number}
 */
model.EncryptBytesRequest.prototype.messageLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {Uint8Array}
 */
model.EncryptBytesRequest.prototype.messageArray = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? new Uint8Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
model.EncryptBytesRequest.prototype.publicKey = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {model.KeyOptions=} obj
 * @returns {model.KeyOptions|null}
 */
model.EncryptBytesRequest.prototype.options = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? (obj || new model.KeyOptions).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {model.Entity=} obj
 * @returns {model.Entity|null}
 */
model.EncryptBytesRequest.prototype.signed = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? (obj || new model.Entity).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {model.FileHints=} obj
 * @returns {model.FileHints|null}
 */
model.EncryptBytesRequest.prototype.fileHints = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? (obj || new model.FileHints).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
model.EncryptBytesRequest.startEncryptBytesRequest = function(builder) {
  builder.startObject(5);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} messageOffset
 */
model.EncryptBytesRequest.addMessage = function(builder, messageOffset) {
  builder.addFieldOffset(0, messageOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<number>} data
 * @returns {flatbuffers.Offset}
 */
model.EncryptBytesRequest.createMessageVector = function(builder, data) {
  builder.startVector(1, data.length, 1);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt8(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
model.EncryptBytesRequest.startMessageVector = function(builder, numElems) {
  builder.startVector(1, numElems, 1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} publicKeyOffset
 */
model.EncryptBytesRequest.addPublicKey = function(builder, publicKeyOffset) {
  builder.addFieldOffset(1, publicKeyOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} optionsOffset
 */
model.EncryptBytesRequest.addOptions = function(builder, optionsOffset) {
  builder.addFieldOffset(2, optionsOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} signedOffset
 */
model.EncryptBytesRequest.addSigned = function(builder, signedOffset) {
  builder.addFieldOffset(3, signedOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} fileHintsOffset
 */
model.EncryptBytesRequest.addFileHints = function(builder, fileHintsOffset) {
  builder.addFieldOffset(4, fileHintsOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
model.EncryptBytesRequest.endEncryptBytesRequest = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} messageOffset
 * @param {flatbuffers.Offset} publicKeyOffset
 * @param {flatbuffers.Offset} optionsOffset
 * @param {flatbuffers.Offset} signedOffset
 * @param {flatbuffers.Offset} fileHintsOffset
 * @returns {flatbuffers.Offset}
 */
model.EncryptBytesRequest.createEncryptBytesRequest = function(builder, messageOffset, publicKeyOffset, optionsOffset, signedOffset, fileHintsOffset) {
  model.EncryptBytesRequest.startEncryptBytesRequest(builder);
  model.EncryptBytesRequest.addMessage(builder, messageOffset);
  model.EncryptBytesRequest.addPublicKey(builder, publicKeyOffset);
  model.EncryptBytesRequest.addOptions(builder, optionsOffset);
  model.EncryptBytesRequest.addSigned(builder, signedOffset);
  model.EncryptBytesRequest.addFileHints(builder, fileHintsOffset);
  return model.EncryptBytesRequest.endEncryptBytesRequest(builder);
}

/**
 * @constructor
 */
model.DecryptRequest = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {model.DecryptRequest}
 */
model.DecryptRequest.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {model.DecryptRequest=} obj
 * @returns {model.DecryptRequest}
 */
model.DecryptRequest.getRootAsDecryptRequest = function(bb, obj) {
  return (obj || new model.DecryptRequest).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {model.DecryptRequest=} obj
 * @returns {model.DecryptRequest}
 */
model.DecryptRequest.getSizePrefixedRootAsDecryptRequest = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new model.DecryptRequest).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
model.DecryptRequest.prototype.message = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
model.DecryptRequest.prototype.privateKey = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
model.DecryptRequest.prototype.passphrase = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {model.KeyOptions=} obj
 * @returns {model.KeyOptions|null}
 */
model.DecryptRequest.prototype.options = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? (obj || new model.KeyOptions).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
model.DecryptRequest.startDecryptRequest = function(builder) {
  builder.startObject(4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} messageOffset
 */
model.DecryptRequest.addMessage = function(builder, messageOffset) {
  builder.addFieldOffset(0, messageOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} privateKeyOffset
 */
model.DecryptRequest.addPrivateKey = function(builder, privateKeyOffset) {
  builder.addFieldOffset(1, privateKeyOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} passphraseOffset
 */
model.DecryptRequest.addPassphrase = function(builder, passphraseOffset) {
  builder.addFieldOffset(2, passphraseOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} optionsOffset
 */
model.DecryptRequest.addOptions = function(builder, optionsOffset) {
  builder.addFieldOffset(3, optionsOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
model.DecryptRequest.endDecryptRequest = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} messageOffset
 * @param {flatbuffers.Offset} privateKeyOffset
 * @param {flatbuffers.Offset} passphraseOffset
 * @param {flatbuffers.Offset} optionsOffset
 * @returns {flatbuffers.Offset}
 */
model.DecryptRequest.createDecryptRequest = function(builder, messageOffset, privateKeyOffset, passphraseOffset, optionsOffset) {
  model.DecryptRequest.startDecryptRequest(builder);
  model.DecryptRequest.addMessage(builder, messageOffset);
  model.DecryptRequest.addPrivateKey(builder, privateKeyOffset);
  model.DecryptRequest.addPassphrase(builder, passphraseOffset);
  model.DecryptRequest.addOptions(builder, optionsOffset);
  return model.DecryptRequest.endDecryptRequest(builder);
}

/**
 * @constructor
 */
model.DecryptBytesRequest = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {model.DecryptBytesRequest}
 */
model.DecryptBytesRequest.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {model.DecryptBytesRequest=} obj
 * @returns {model.DecryptBytesRequest}
 */
model.DecryptBytesRequest.getRootAsDecryptBytesRequest = function(bb, obj) {
  return (obj || new model.DecryptBytesRequest).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {model.DecryptBytesRequest=} obj
 * @returns {model.DecryptBytesRequest}
 */
model.DecryptBytesRequest.getSizePrefixedRootAsDecryptBytesRequest = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new model.DecryptBytesRequest).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {number} index
 * @returns {number}
 */
model.DecryptBytesRequest.prototype.message = function(index) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readUint8(this.bb.__vector(this.bb_pos + offset) + index) : 0;
};

/**
 * @returns {number}
 */
model.DecryptBytesRequest.prototype.messageLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {Uint8Array}
 */
model.DecryptBytesRequest.prototype.messageArray = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? new Uint8Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
model.DecryptBytesRequest.prototype.privateKey = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
model.DecryptBytesRequest.prototype.passphrase = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {model.KeyOptions=} obj
 * @returns {model.KeyOptions|null}
 */
model.DecryptBytesRequest.prototype.options = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? (obj || new model.KeyOptions).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
model.DecryptBytesRequest.startDecryptBytesRequest = function(builder) {
  builder.startObject(4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} messageOffset
 */
model.DecryptBytesRequest.addMessage = function(builder, messageOffset) {
  builder.addFieldOffset(0, messageOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<number>} data
 * @returns {flatbuffers.Offset}
 */
model.DecryptBytesRequest.createMessageVector = function(builder, data) {
  builder.startVector(1, data.length, 1);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt8(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
model.DecryptBytesRequest.startMessageVector = function(builder, numElems) {
  builder.startVector(1, numElems, 1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} privateKeyOffset
 */
model.DecryptBytesRequest.addPrivateKey = function(builder, privateKeyOffset) {
  builder.addFieldOffset(1, privateKeyOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} passphraseOffset
 */
model.DecryptBytesRequest.addPassphrase = function(builder, passphraseOffset) {
  builder.addFieldOffset(2, passphraseOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} optionsOffset
 */
model.DecryptBytesRequest.addOptions = function(builder, optionsOffset) {
  builder.addFieldOffset(3, optionsOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
model.DecryptBytesRequest.endDecryptBytesRequest = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} messageOffset
 * @param {flatbuffers.Offset} privateKeyOffset
 * @param {flatbuffers.Offset} passphraseOffset
 * @param {flatbuffers.Offset} optionsOffset
 * @returns {flatbuffers.Offset}
 */
model.DecryptBytesRequest.createDecryptBytesRequest = function(builder, messageOffset, privateKeyOffset, passphraseOffset, optionsOffset) {
  model.DecryptBytesRequest.startDecryptBytesRequest(builder);
  model.DecryptBytesRequest.addMessage(builder, messageOffset);
  model.DecryptBytesRequest.addPrivateKey(builder, privateKeyOffset);
  model.DecryptBytesRequest.addPassphrase(builder, passphraseOffset);
  model.DecryptBytesRequest.addOptions(builder, optionsOffset);
  return model.DecryptBytesRequest.endDecryptBytesRequest(builder);
}

/**
 * @constructor
 */
model.SignRequest = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {model.SignRequest}
 */
model.SignRequest.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {model.SignRequest=} obj
 * @returns {model.SignRequest}
 */
model.SignRequest.getRootAsSignRequest = function(bb, obj) {
  return (obj || new model.SignRequest).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {model.SignRequest=} obj
 * @returns {model.SignRequest}
 */
model.SignRequest.getSizePrefixedRootAsSignRequest = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new model.SignRequest).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
model.SignRequest.prototype.message = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
model.SignRequest.prototype.publicKey = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
model.SignRequest.prototype.privateKey = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
model.SignRequest.prototype.passphrase = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {model.KeyOptions=} obj
 * @returns {model.KeyOptions|null}
 */
model.SignRequest.prototype.options = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? (obj || new model.KeyOptions).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
model.SignRequest.startSignRequest = function(builder) {
  builder.startObject(5);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} messageOffset
 */
model.SignRequest.addMessage = function(builder, messageOffset) {
  builder.addFieldOffset(0, messageOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} publicKeyOffset
 */
model.SignRequest.addPublicKey = function(builder, publicKeyOffset) {
  builder.addFieldOffset(1, publicKeyOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} privateKeyOffset
 */
model.SignRequest.addPrivateKey = function(builder, privateKeyOffset) {
  builder.addFieldOffset(2, privateKeyOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} passphraseOffset
 */
model.SignRequest.addPassphrase = function(builder, passphraseOffset) {
  builder.addFieldOffset(3, passphraseOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} optionsOffset
 */
model.SignRequest.addOptions = function(builder, optionsOffset) {
  builder.addFieldOffset(4, optionsOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
model.SignRequest.endSignRequest = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} messageOffset
 * @param {flatbuffers.Offset} publicKeyOffset
 * @param {flatbuffers.Offset} privateKeyOffset
 * @param {flatbuffers.Offset} passphraseOffset
 * @param {flatbuffers.Offset} optionsOffset
 * @returns {flatbuffers.Offset}
 */
model.SignRequest.createSignRequest = function(builder, messageOffset, publicKeyOffset, privateKeyOffset, passphraseOffset, optionsOffset) {
  model.SignRequest.startSignRequest(builder);
  model.SignRequest.addMessage(builder, messageOffset);
  model.SignRequest.addPublicKey(builder, publicKeyOffset);
  model.SignRequest.addPrivateKey(builder, privateKeyOffset);
  model.SignRequest.addPassphrase(builder, passphraseOffset);
  model.SignRequest.addOptions(builder, optionsOffset);
  return model.SignRequest.endSignRequest(builder);
}

/**
 * @constructor
 */
model.SignBytesRequest = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {model.SignBytesRequest}
 */
model.SignBytesRequest.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {model.SignBytesRequest=} obj
 * @returns {model.SignBytesRequest}
 */
model.SignBytesRequest.getRootAsSignBytesRequest = function(bb, obj) {
  return (obj || new model.SignBytesRequest).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {model.SignBytesRequest=} obj
 * @returns {model.SignBytesRequest}
 */
model.SignBytesRequest.getSizePrefixedRootAsSignBytesRequest = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new model.SignBytesRequest).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {number} index
 * @returns {number}
 */
model.SignBytesRequest.prototype.message = function(index) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readUint8(this.bb.__vector(this.bb_pos + offset) + index) : 0;
};

/**
 * @returns {number}
 */
model.SignBytesRequest.prototype.messageLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {Uint8Array}
 */
model.SignBytesRequest.prototype.messageArray = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? new Uint8Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
model.SignBytesRequest.prototype.publicKey = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
model.SignBytesRequest.prototype.privateKey = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
model.SignBytesRequest.prototype.passphrase = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {model.KeyOptions=} obj
 * @returns {model.KeyOptions|null}
 */
model.SignBytesRequest.prototype.options = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? (obj || new model.KeyOptions).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
model.SignBytesRequest.startSignBytesRequest = function(builder) {
  builder.startObject(5);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} messageOffset
 */
model.SignBytesRequest.addMessage = function(builder, messageOffset) {
  builder.addFieldOffset(0, messageOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<number>} data
 * @returns {flatbuffers.Offset}
 */
model.SignBytesRequest.createMessageVector = function(builder, data) {
  builder.startVector(1, data.length, 1);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt8(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
model.SignBytesRequest.startMessageVector = function(builder, numElems) {
  builder.startVector(1, numElems, 1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} publicKeyOffset
 */
model.SignBytesRequest.addPublicKey = function(builder, publicKeyOffset) {
  builder.addFieldOffset(1, publicKeyOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} privateKeyOffset
 */
model.SignBytesRequest.addPrivateKey = function(builder, privateKeyOffset) {
  builder.addFieldOffset(2, privateKeyOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} passphraseOffset
 */
model.SignBytesRequest.addPassphrase = function(builder, passphraseOffset) {
  builder.addFieldOffset(3, passphraseOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} optionsOffset
 */
model.SignBytesRequest.addOptions = function(builder, optionsOffset) {
  builder.addFieldOffset(4, optionsOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
model.SignBytesRequest.endSignBytesRequest = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} messageOffset
 * @param {flatbuffers.Offset} publicKeyOffset
 * @param {flatbuffers.Offset} privateKeyOffset
 * @param {flatbuffers.Offset} passphraseOffset
 * @param {flatbuffers.Offset} optionsOffset
 * @returns {flatbuffers.Offset}
 */
model.SignBytesRequest.createSignBytesRequest = function(builder, messageOffset, publicKeyOffset, privateKeyOffset, passphraseOffset, optionsOffset) {
  model.SignBytesRequest.startSignBytesRequest(builder);
  model.SignBytesRequest.addMessage(builder, messageOffset);
  model.SignBytesRequest.addPublicKey(builder, publicKeyOffset);
  model.SignBytesRequest.addPrivateKey(builder, privateKeyOffset);
  model.SignBytesRequest.addPassphrase(builder, passphraseOffset);
  model.SignBytesRequest.addOptions(builder, optionsOffset);
  return model.SignBytesRequest.endSignBytesRequest(builder);
}

/**
 * @constructor
 */
model.VerifyRequest = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {model.VerifyRequest}
 */
model.VerifyRequest.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {model.VerifyRequest=} obj
 * @returns {model.VerifyRequest}
 */
model.VerifyRequest.getRootAsVerifyRequest = function(bb, obj) {
  return (obj || new model.VerifyRequest).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {model.VerifyRequest=} obj
 * @returns {model.VerifyRequest}
 */
model.VerifyRequest.getSizePrefixedRootAsVerifyRequest = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new model.VerifyRequest).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
model.VerifyRequest.prototype.signature = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
model.VerifyRequest.prototype.message = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
model.VerifyRequest.prototype.publicKey = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
model.VerifyRequest.startVerifyRequest = function(builder) {
  builder.startObject(3);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} signatureOffset
 */
model.VerifyRequest.addSignature = function(builder, signatureOffset) {
  builder.addFieldOffset(0, signatureOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} messageOffset
 */
model.VerifyRequest.addMessage = function(builder, messageOffset) {
  builder.addFieldOffset(1, messageOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} publicKeyOffset
 */
model.VerifyRequest.addPublicKey = function(builder, publicKeyOffset) {
  builder.addFieldOffset(2, publicKeyOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
model.VerifyRequest.endVerifyRequest = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} signatureOffset
 * @param {flatbuffers.Offset} messageOffset
 * @param {flatbuffers.Offset} publicKeyOffset
 * @returns {flatbuffers.Offset}
 */
model.VerifyRequest.createVerifyRequest = function(builder, signatureOffset, messageOffset, publicKeyOffset) {
  model.VerifyRequest.startVerifyRequest(builder);
  model.VerifyRequest.addSignature(builder, signatureOffset);
  model.VerifyRequest.addMessage(builder, messageOffset);
  model.VerifyRequest.addPublicKey(builder, publicKeyOffset);
  return model.VerifyRequest.endVerifyRequest(builder);
}

/**
 * @constructor
 */
model.VerifyBytesRequest = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {model.VerifyBytesRequest}
 */
model.VerifyBytesRequest.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {model.VerifyBytesRequest=} obj
 * @returns {model.VerifyBytesRequest}
 */
model.VerifyBytesRequest.getRootAsVerifyBytesRequest = function(bb, obj) {
  return (obj || new model.VerifyBytesRequest).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {model.VerifyBytesRequest=} obj
 * @returns {model.VerifyBytesRequest}
 */
model.VerifyBytesRequest.getSizePrefixedRootAsVerifyBytesRequest = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new model.VerifyBytesRequest).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
model.VerifyBytesRequest.prototype.signature = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {number} index
 * @returns {number}
 */
model.VerifyBytesRequest.prototype.message = function(index) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.readUint8(this.bb.__vector(this.bb_pos + offset) + index) : 0;
};

/**
 * @returns {number}
 */
model.VerifyBytesRequest.prototype.messageLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {Uint8Array}
 */
model.VerifyBytesRequest.prototype.messageArray = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? new Uint8Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
model.VerifyBytesRequest.prototype.publicKey = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
model.VerifyBytesRequest.startVerifyBytesRequest = function(builder) {
  builder.startObject(3);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} signatureOffset
 */
model.VerifyBytesRequest.addSignature = function(builder, signatureOffset) {
  builder.addFieldOffset(0, signatureOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} messageOffset
 */
model.VerifyBytesRequest.addMessage = function(builder, messageOffset) {
  builder.addFieldOffset(1, messageOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<number>} data
 * @returns {flatbuffers.Offset}
 */
model.VerifyBytesRequest.createMessageVector = function(builder, data) {
  builder.startVector(1, data.length, 1);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt8(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
model.VerifyBytesRequest.startMessageVector = function(builder, numElems) {
  builder.startVector(1, numElems, 1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} publicKeyOffset
 */
model.VerifyBytesRequest.addPublicKey = function(builder, publicKeyOffset) {
  builder.addFieldOffset(2, publicKeyOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
model.VerifyBytesRequest.endVerifyBytesRequest = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} signatureOffset
 * @param {flatbuffers.Offset} messageOffset
 * @param {flatbuffers.Offset} publicKeyOffset
 * @returns {flatbuffers.Offset}
 */
model.VerifyBytesRequest.createVerifyBytesRequest = function(builder, signatureOffset, messageOffset, publicKeyOffset) {
  model.VerifyBytesRequest.startVerifyBytesRequest(builder);
  model.VerifyBytesRequest.addSignature(builder, signatureOffset);
  model.VerifyBytesRequest.addMessage(builder, messageOffset);
  model.VerifyBytesRequest.addPublicKey(builder, publicKeyOffset);
  return model.VerifyBytesRequest.endVerifyBytesRequest(builder);
}

/**
 * @constructor
 */
model.EncryptSymmetricRequest = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {model.EncryptSymmetricRequest}
 */
model.EncryptSymmetricRequest.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {model.EncryptSymmetricRequest=} obj
 * @returns {model.EncryptSymmetricRequest}
 */
model.EncryptSymmetricRequest.getRootAsEncryptSymmetricRequest = function(bb, obj) {
  return (obj || new model.EncryptSymmetricRequest).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {model.EncryptSymmetricRequest=} obj
 * @returns {model.EncryptSymmetricRequest}
 */
model.EncryptSymmetricRequest.getSizePrefixedRootAsEncryptSymmetricRequest = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new model.EncryptSymmetricRequest).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
model.EncryptSymmetricRequest.prototype.message = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
model.EncryptSymmetricRequest.prototype.passphrase = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {model.KeyOptions=} obj
 * @returns {model.KeyOptions|null}
 */
model.EncryptSymmetricRequest.prototype.options = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? (obj || new model.KeyOptions).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {model.FileHints=} obj
 * @returns {model.FileHints|null}
 */
model.EncryptSymmetricRequest.prototype.fileHints = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? (obj || new model.FileHints).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
model.EncryptSymmetricRequest.startEncryptSymmetricRequest = function(builder) {
  builder.startObject(4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} messageOffset
 */
model.EncryptSymmetricRequest.addMessage = function(builder, messageOffset) {
  builder.addFieldOffset(0, messageOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} passphraseOffset
 */
model.EncryptSymmetricRequest.addPassphrase = function(builder, passphraseOffset) {
  builder.addFieldOffset(1, passphraseOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} optionsOffset
 */
model.EncryptSymmetricRequest.addOptions = function(builder, optionsOffset) {
  builder.addFieldOffset(2, optionsOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} fileHintsOffset
 */
model.EncryptSymmetricRequest.addFileHints = function(builder, fileHintsOffset) {
  builder.addFieldOffset(3, fileHintsOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
model.EncryptSymmetricRequest.endEncryptSymmetricRequest = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} messageOffset
 * @param {flatbuffers.Offset} passphraseOffset
 * @param {flatbuffers.Offset} optionsOffset
 * @param {flatbuffers.Offset} fileHintsOffset
 * @returns {flatbuffers.Offset}
 */
model.EncryptSymmetricRequest.createEncryptSymmetricRequest = function(builder, messageOffset, passphraseOffset, optionsOffset, fileHintsOffset) {
  model.EncryptSymmetricRequest.startEncryptSymmetricRequest(builder);
  model.EncryptSymmetricRequest.addMessage(builder, messageOffset);
  model.EncryptSymmetricRequest.addPassphrase(builder, passphraseOffset);
  model.EncryptSymmetricRequest.addOptions(builder, optionsOffset);
  model.EncryptSymmetricRequest.addFileHints(builder, fileHintsOffset);
  return model.EncryptSymmetricRequest.endEncryptSymmetricRequest(builder);
}

/**
 * @constructor
 */
model.EncryptSymmetricBytesRequest = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {model.EncryptSymmetricBytesRequest}
 */
model.EncryptSymmetricBytesRequest.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {model.EncryptSymmetricBytesRequest=} obj
 * @returns {model.EncryptSymmetricBytesRequest}
 */
model.EncryptSymmetricBytesRequest.getRootAsEncryptSymmetricBytesRequest = function(bb, obj) {
  return (obj || new model.EncryptSymmetricBytesRequest).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {model.EncryptSymmetricBytesRequest=} obj
 * @returns {model.EncryptSymmetricBytesRequest}
 */
model.EncryptSymmetricBytesRequest.getSizePrefixedRootAsEncryptSymmetricBytesRequest = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new model.EncryptSymmetricBytesRequest).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {number} index
 * @returns {number}
 */
model.EncryptSymmetricBytesRequest.prototype.message = function(index) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readUint8(this.bb.__vector(this.bb_pos + offset) + index) : 0;
};

/**
 * @returns {number}
 */
model.EncryptSymmetricBytesRequest.prototype.messageLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {Uint8Array}
 */
model.EncryptSymmetricBytesRequest.prototype.messageArray = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? new Uint8Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
model.EncryptSymmetricBytesRequest.prototype.passphrase = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {model.KeyOptions=} obj
 * @returns {model.KeyOptions|null}
 */
model.EncryptSymmetricBytesRequest.prototype.options = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? (obj || new model.KeyOptions).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {model.FileHints=} obj
 * @returns {model.FileHints|null}
 */
model.EncryptSymmetricBytesRequest.prototype.fileHints = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? (obj || new model.FileHints).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
model.EncryptSymmetricBytesRequest.startEncryptSymmetricBytesRequest = function(builder) {
  builder.startObject(4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} messageOffset
 */
model.EncryptSymmetricBytesRequest.addMessage = function(builder, messageOffset) {
  builder.addFieldOffset(0, messageOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<number>} data
 * @returns {flatbuffers.Offset}
 */
model.EncryptSymmetricBytesRequest.createMessageVector = function(builder, data) {
  builder.startVector(1, data.length, 1);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt8(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
model.EncryptSymmetricBytesRequest.startMessageVector = function(builder, numElems) {
  builder.startVector(1, numElems, 1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} passphraseOffset
 */
model.EncryptSymmetricBytesRequest.addPassphrase = function(builder, passphraseOffset) {
  builder.addFieldOffset(1, passphraseOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} optionsOffset
 */
model.EncryptSymmetricBytesRequest.addOptions = function(builder, optionsOffset) {
  builder.addFieldOffset(2, optionsOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} fileHintsOffset
 */
model.EncryptSymmetricBytesRequest.addFileHints = function(builder, fileHintsOffset) {
  builder.addFieldOffset(3, fileHintsOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
model.EncryptSymmetricBytesRequest.endEncryptSymmetricBytesRequest = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} messageOffset
 * @param {flatbuffers.Offset} passphraseOffset
 * @param {flatbuffers.Offset} optionsOffset
 * @param {flatbuffers.Offset} fileHintsOffset
 * @returns {flatbuffers.Offset}
 */
model.EncryptSymmetricBytesRequest.createEncryptSymmetricBytesRequest = function(builder, messageOffset, passphraseOffset, optionsOffset, fileHintsOffset) {
  model.EncryptSymmetricBytesRequest.startEncryptSymmetricBytesRequest(builder);
  model.EncryptSymmetricBytesRequest.addMessage(builder, messageOffset);
  model.EncryptSymmetricBytesRequest.addPassphrase(builder, passphraseOffset);
  model.EncryptSymmetricBytesRequest.addOptions(builder, optionsOffset);
  model.EncryptSymmetricBytesRequest.addFileHints(builder, fileHintsOffset);
  return model.EncryptSymmetricBytesRequest.endEncryptSymmetricBytesRequest(builder);
}

/**
 * @constructor
 */
model.DecryptSymmetricRequest = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {model.DecryptSymmetricRequest}
 */
model.DecryptSymmetricRequest.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {model.DecryptSymmetricRequest=} obj
 * @returns {model.DecryptSymmetricRequest}
 */
model.DecryptSymmetricRequest.getRootAsDecryptSymmetricRequest = function(bb, obj) {
  return (obj || new model.DecryptSymmetricRequest).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {model.DecryptSymmetricRequest=} obj
 * @returns {model.DecryptSymmetricRequest}
 */
model.DecryptSymmetricRequest.getSizePrefixedRootAsDecryptSymmetricRequest = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new model.DecryptSymmetricRequest).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
model.DecryptSymmetricRequest.prototype.message = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
model.DecryptSymmetricRequest.prototype.passphrase = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {model.KeyOptions=} obj
 * @returns {model.KeyOptions|null}
 */
model.DecryptSymmetricRequest.prototype.options = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? (obj || new model.KeyOptions).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
model.DecryptSymmetricRequest.startDecryptSymmetricRequest = function(builder) {
  builder.startObject(3);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} messageOffset
 */
model.DecryptSymmetricRequest.addMessage = function(builder, messageOffset) {
  builder.addFieldOffset(0, messageOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} passphraseOffset
 */
model.DecryptSymmetricRequest.addPassphrase = function(builder, passphraseOffset) {
  builder.addFieldOffset(1, passphraseOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} optionsOffset
 */
model.DecryptSymmetricRequest.addOptions = function(builder, optionsOffset) {
  builder.addFieldOffset(2, optionsOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
model.DecryptSymmetricRequest.endDecryptSymmetricRequest = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} messageOffset
 * @param {flatbuffers.Offset} passphraseOffset
 * @param {flatbuffers.Offset} optionsOffset
 * @returns {flatbuffers.Offset}
 */
model.DecryptSymmetricRequest.createDecryptSymmetricRequest = function(builder, messageOffset, passphraseOffset, optionsOffset) {
  model.DecryptSymmetricRequest.startDecryptSymmetricRequest(builder);
  model.DecryptSymmetricRequest.addMessage(builder, messageOffset);
  model.DecryptSymmetricRequest.addPassphrase(builder, passphraseOffset);
  model.DecryptSymmetricRequest.addOptions(builder, optionsOffset);
  return model.DecryptSymmetricRequest.endDecryptSymmetricRequest(builder);
}

/**
 * @constructor
 */
model.DecryptSymmetricBytesRequest = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {model.DecryptSymmetricBytesRequest}
 */
model.DecryptSymmetricBytesRequest.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {model.DecryptSymmetricBytesRequest=} obj
 * @returns {model.DecryptSymmetricBytesRequest}
 */
model.DecryptSymmetricBytesRequest.getRootAsDecryptSymmetricBytesRequest = function(bb, obj) {
  return (obj || new model.DecryptSymmetricBytesRequest).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {model.DecryptSymmetricBytesRequest=} obj
 * @returns {model.DecryptSymmetricBytesRequest}
 */
model.DecryptSymmetricBytesRequest.getSizePrefixedRootAsDecryptSymmetricBytesRequest = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new model.DecryptSymmetricBytesRequest).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {number} index
 * @returns {number}
 */
model.DecryptSymmetricBytesRequest.prototype.message = function(index) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readUint8(this.bb.__vector(this.bb_pos + offset) + index) : 0;
};

/**
 * @returns {number}
 */
model.DecryptSymmetricBytesRequest.prototype.messageLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {Uint8Array}
 */
model.DecryptSymmetricBytesRequest.prototype.messageArray = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? new Uint8Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
model.DecryptSymmetricBytesRequest.prototype.passphrase = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {model.KeyOptions=} obj
 * @returns {model.KeyOptions|null}
 */
model.DecryptSymmetricBytesRequest.prototype.options = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? (obj || new model.KeyOptions).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
model.DecryptSymmetricBytesRequest.startDecryptSymmetricBytesRequest = function(builder) {
  builder.startObject(3);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} messageOffset
 */
model.DecryptSymmetricBytesRequest.addMessage = function(builder, messageOffset) {
  builder.addFieldOffset(0, messageOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<number>} data
 * @returns {flatbuffers.Offset}
 */
model.DecryptSymmetricBytesRequest.createMessageVector = function(builder, data) {
  builder.startVector(1, data.length, 1);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt8(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
model.DecryptSymmetricBytesRequest.startMessageVector = function(builder, numElems) {
  builder.startVector(1, numElems, 1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} passphraseOffset
 */
model.DecryptSymmetricBytesRequest.addPassphrase = function(builder, passphraseOffset) {
  builder.addFieldOffset(1, passphraseOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} optionsOffset
 */
model.DecryptSymmetricBytesRequest.addOptions = function(builder, optionsOffset) {
  builder.addFieldOffset(2, optionsOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
model.DecryptSymmetricBytesRequest.endDecryptSymmetricBytesRequest = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} messageOffset
 * @param {flatbuffers.Offset} passphraseOffset
 * @param {flatbuffers.Offset} optionsOffset
 * @returns {flatbuffers.Offset}
 */
model.DecryptSymmetricBytesRequest.createDecryptSymmetricBytesRequest = function(builder, messageOffset, passphraseOffset, optionsOffset) {
  model.DecryptSymmetricBytesRequest.startDecryptSymmetricBytesRequest(builder);
  model.DecryptSymmetricBytesRequest.addMessage(builder, messageOffset);
  model.DecryptSymmetricBytesRequest.addPassphrase(builder, passphraseOffset);
  model.DecryptSymmetricBytesRequest.addOptions(builder, optionsOffset);
  return model.DecryptSymmetricBytesRequest.endDecryptSymmetricBytesRequest(builder);
}

/**
 * @constructor
 */
model.GenerateRequest = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {model.GenerateRequest}
 */
model.GenerateRequest.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {model.GenerateRequest=} obj
 * @returns {model.GenerateRequest}
 */
model.GenerateRequest.getRootAsGenerateRequest = function(bb, obj) {
  return (obj || new model.GenerateRequest).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {model.GenerateRequest=} obj
 * @returns {model.GenerateRequest}
 */
model.GenerateRequest.getSizePrefixedRootAsGenerateRequest = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new model.GenerateRequest).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {model.Options=} obj
 * @returns {model.Options|null}
 */
model.GenerateRequest.prototype.options = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? (obj || new model.Options).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
model.GenerateRequest.startGenerateRequest = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} optionsOffset
 */
model.GenerateRequest.addOptions = function(builder, optionsOffset) {
  builder.addFieldOffset(0, optionsOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
model.GenerateRequest.endGenerateRequest = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} optionsOffset
 * @returns {flatbuffers.Offset}
 */
model.GenerateRequest.createGenerateRequest = function(builder, optionsOffset) {
  model.GenerateRequest.startGenerateRequest(builder);
  model.GenerateRequest.addOptions(builder, optionsOffset);
  return model.GenerateRequest.endGenerateRequest(builder);
}

/**
 * @constructor
 */
model.KeyOptions = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {model.KeyOptions}
 */
model.KeyOptions.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {model.KeyOptions=} obj
 * @returns {model.KeyOptions}
 */
model.KeyOptions.getRootAsKeyOptions = function(bb, obj) {
  return (obj || new model.KeyOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {model.KeyOptions=} obj
 * @returns {model.KeyOptions}
 */
model.KeyOptions.getSizePrefixedRootAsKeyOptions = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new model.KeyOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {model.Hash}
 */
model.KeyOptions.prototype.hash = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? /** @type {model.Hash} */ (this.bb.readInt32(this.bb_pos + offset)) : model.Hash.HASH_UNSPECIFIED;
};

/**
 * @param {model.Hash} value
 * @returns {boolean}
 */
model.KeyOptions.prototype.mutate_hash = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 4);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt32(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {model.Cipher}
 */
model.KeyOptions.prototype.cipher = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? /** @type {model.Cipher} */ (this.bb.readInt32(this.bb_pos + offset)) : model.Cipher.CIPHER_UNSPECIFIED;
};

/**
 * @param {model.Cipher} value
 * @returns {boolean}
 */
model.KeyOptions.prototype.mutate_cipher = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 6);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt32(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {model.Compression}
 */
model.KeyOptions.prototype.compression = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? /** @type {model.Compression} */ (this.bb.readInt32(this.bb_pos + offset)) : model.Compression.COMPRESSION_UNSPECIFIED;
};

/**
 * @param {model.Compression} value
 * @returns {boolean}
 */
model.KeyOptions.prototype.mutate_compression = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 8);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt32(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
model.KeyOptions.prototype.compressionLevel = function() {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
model.KeyOptions.prototype.mutate_compressionLevel = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 10);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt32(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
model.KeyOptions.prototype.rsaBits = function() {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
model.KeyOptions.prototype.mutate_rsaBits = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 12);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt32(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {flatbuffers.Builder} builder
 */
model.KeyOptions.startKeyOptions = function(builder) {
  builder.startObject(5);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {model.Hash} hash
 */
model.KeyOptions.addHash = function(builder, hash) {
  builder.addFieldInt32(0, hash, model.Hash.HASH_UNSPECIFIED);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {model.Cipher} cipher
 */
model.KeyOptions.addCipher = function(builder, cipher) {
  builder.addFieldInt32(1, cipher, model.Cipher.CIPHER_UNSPECIFIED);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {model.Compression} compression
 */
model.KeyOptions.addCompression = function(builder, compression) {
  builder.addFieldInt32(2, compression, model.Compression.COMPRESSION_UNSPECIFIED);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} compressionLevel
 */
model.KeyOptions.addCompressionLevel = function(builder, compressionLevel) {
  builder.addFieldInt32(3, compressionLevel, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} rsaBits
 */
model.KeyOptions.addRsaBits = function(builder, rsaBits) {
  builder.addFieldInt32(4, rsaBits, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
model.KeyOptions.endKeyOptions = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {model.Hash} hash
 * @param {model.Cipher} cipher
 * @param {model.Compression} compression
 * @param {number} compressionLevel
 * @param {number} rsaBits
 * @returns {flatbuffers.Offset}
 */
model.KeyOptions.createKeyOptions = function(builder, hash, cipher, compression, compressionLevel, rsaBits) {
  model.KeyOptions.startKeyOptions(builder);
  model.KeyOptions.addHash(builder, hash);
  model.KeyOptions.addCipher(builder, cipher);
  model.KeyOptions.addCompression(builder, compression);
  model.KeyOptions.addCompressionLevel(builder, compressionLevel);
  model.KeyOptions.addRsaBits(builder, rsaBits);
  return model.KeyOptions.endKeyOptions(builder);
}

/**
 * @constructor
 */
model.Options = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {model.Options}
 */
model.Options.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {model.Options=} obj
 * @returns {model.Options}
 */
model.Options.getRootAsOptions = function(bb, obj) {
  return (obj || new model.Options).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {model.Options=} obj
 * @returns {model.Options}
 */
model.Options.getSizePrefixedRootAsOptions = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new model.Options).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
model.Options.prototype.name = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
model.Options.prototype.comment = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
model.Options.prototype.email = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
model.Options.prototype.passphrase = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {model.KeyOptions=} obj
 * @returns {model.KeyOptions|null}
 */
model.Options.prototype.keyOptions = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? (obj || new model.KeyOptions).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
model.Options.startOptions = function(builder) {
  builder.startObject(5);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} nameOffset
 */
model.Options.addName = function(builder, nameOffset) {
  builder.addFieldOffset(0, nameOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} commentOffset
 */
model.Options.addComment = function(builder, commentOffset) {
  builder.addFieldOffset(1, commentOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} emailOffset
 */
model.Options.addEmail = function(builder, emailOffset) {
  builder.addFieldOffset(2, emailOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} passphraseOffset
 */
model.Options.addPassphrase = function(builder, passphraseOffset) {
  builder.addFieldOffset(3, passphraseOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} keyOptionsOffset
 */
model.Options.addKeyOptions = function(builder, keyOptionsOffset) {
  builder.addFieldOffset(4, keyOptionsOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
model.Options.endOptions = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} nameOffset
 * @param {flatbuffers.Offset} commentOffset
 * @param {flatbuffers.Offset} emailOffset
 * @param {flatbuffers.Offset} passphraseOffset
 * @param {flatbuffers.Offset} keyOptionsOffset
 * @returns {flatbuffers.Offset}
 */
model.Options.createOptions = function(builder, nameOffset, commentOffset, emailOffset, passphraseOffset, keyOptionsOffset) {
  model.Options.startOptions(builder);
  model.Options.addName(builder, nameOffset);
  model.Options.addComment(builder, commentOffset);
  model.Options.addEmail(builder, emailOffset);
  model.Options.addPassphrase(builder, passphraseOffset);
  model.Options.addKeyOptions(builder, keyOptionsOffset);
  return model.Options.endOptions(builder);
}

/**
 * @constructor
 */
model.FileHints = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {model.FileHints}
 */
model.FileHints.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {model.FileHints=} obj
 * @returns {model.FileHints}
 */
model.FileHints.getRootAsFileHints = function(bb, obj) {
  return (obj || new model.FileHints).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {model.FileHints=} obj
 * @returns {model.FileHints}
 */
model.FileHints.getSizePrefixedRootAsFileHints = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new model.FileHints).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {boolean}
 */
model.FileHints.prototype.isBinary = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;
};

/**
 * @param {boolean} value
 * @returns {boolean}
 */
model.FileHints.prototype.mutate_isBinary = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 4);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt8(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
model.FileHints.prototype.fileName = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
model.FileHints.prototype.modTime = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
model.FileHints.startFileHints = function(builder) {
  builder.startObject(3);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {boolean} isBinary
 */
model.FileHints.addIsBinary = function(builder, isBinary) {
  builder.addFieldInt8(0, +isBinary, +false);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} fileNameOffset
 */
model.FileHints.addFileName = function(builder, fileNameOffset) {
  builder.addFieldOffset(1, fileNameOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} modTimeOffset
 */
model.FileHints.addModTime = function(builder, modTimeOffset) {
  builder.addFieldOffset(2, modTimeOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
model.FileHints.endFileHints = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {boolean} isBinary
 * @param {flatbuffers.Offset} fileNameOffset
 * @param {flatbuffers.Offset} modTimeOffset
 * @returns {flatbuffers.Offset}
 */
model.FileHints.createFileHints = function(builder, isBinary, fileNameOffset, modTimeOffset) {
  model.FileHints.startFileHints(builder);
  model.FileHints.addIsBinary(builder, isBinary);
  model.FileHints.addFileName(builder, fileNameOffset);
  model.FileHints.addModTime(builder, modTimeOffset);
  return model.FileHints.endFileHints(builder);
}

/**
 * @constructor
 */
model.Entity = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {model.Entity}
 */
model.Entity.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {model.Entity=} obj
 * @returns {model.Entity}
 */
model.Entity.getRootAsEntity = function(bb, obj) {
  return (obj || new model.Entity).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {model.Entity=} obj
 * @returns {model.Entity}
 */
model.Entity.getSizePrefixedRootAsEntity = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new model.Entity).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
model.Entity.prototype.publicKey = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
model.Entity.prototype.privateKey = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
model.Entity.prototype.passphrase = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
model.Entity.startEntity = function(builder) {
  builder.startObject(3);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} publicKeyOffset
 */
model.Entity.addPublicKey = function(builder, publicKeyOffset) {
  builder.addFieldOffset(0, publicKeyOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} privateKeyOffset
 */
model.Entity.addPrivateKey = function(builder, privateKeyOffset) {
  builder.addFieldOffset(1, privateKeyOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} passphraseOffset
 */
model.Entity.addPassphrase = function(builder, passphraseOffset) {
  builder.addFieldOffset(2, passphraseOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
model.Entity.endEntity = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} publicKeyOffset
 * @param {flatbuffers.Offset} privateKeyOffset
 * @param {flatbuffers.Offset} passphraseOffset
 * @returns {flatbuffers.Offset}
 */
model.Entity.createEntity = function(builder, publicKeyOffset, privateKeyOffset, passphraseOffset) {
  model.Entity.startEntity(builder);
  model.Entity.addPublicKey(builder, publicKeyOffset);
  model.Entity.addPrivateKey(builder, privateKeyOffset);
  model.Entity.addPassphrase(builder, passphraseOffset);
  return model.Entity.endEntity(builder);
}

/**
 * @constructor
 */
model.StringResponse = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {model.StringResponse}
 */
model.StringResponse.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {model.StringResponse=} obj
 * @returns {model.StringResponse}
 */
model.StringResponse.getRootAsStringResponse = function(bb, obj) {
  return (obj || new model.StringResponse).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {model.StringResponse=} obj
 * @returns {model.StringResponse}
 */
model.StringResponse.getSizePrefixedRootAsStringResponse = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new model.StringResponse).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
model.StringResponse.prototype.output = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
model.StringResponse.prototype.error = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
model.StringResponse.startStringResponse = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} outputOffset
 */
model.StringResponse.addOutput = function(builder, outputOffset) {
  builder.addFieldOffset(0, outputOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} errorOffset
 */
model.StringResponse.addError = function(builder, errorOffset) {
  builder.addFieldOffset(1, errorOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
model.StringResponse.endStringResponse = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} outputOffset
 * @param {flatbuffers.Offset} errorOffset
 * @returns {flatbuffers.Offset}
 */
model.StringResponse.createStringResponse = function(builder, outputOffset, errorOffset) {
  model.StringResponse.startStringResponse(builder);
  model.StringResponse.addOutput(builder, outputOffset);
  model.StringResponse.addError(builder, errorOffset);
  return model.StringResponse.endStringResponse(builder);
}

/**
 * @constructor
 */
model.BytesResponse = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {model.BytesResponse}
 */
model.BytesResponse.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {model.BytesResponse=} obj
 * @returns {model.BytesResponse}
 */
model.BytesResponse.getRootAsBytesResponse = function(bb, obj) {
  return (obj || new model.BytesResponse).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {model.BytesResponse=} obj
 * @returns {model.BytesResponse}
 */
model.BytesResponse.getSizePrefixedRootAsBytesResponse = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new model.BytesResponse).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {number} index
 * @returns {number}
 */
model.BytesResponse.prototype.output = function(index) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readUint8(this.bb.__vector(this.bb_pos + offset) + index) : 0;
};

/**
 * @returns {number}
 */
model.BytesResponse.prototype.outputLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {Uint8Array}
 */
model.BytesResponse.prototype.outputArray = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? new Uint8Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
model.BytesResponse.prototype.error = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
model.BytesResponse.startBytesResponse = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} outputOffset
 */
model.BytesResponse.addOutput = function(builder, outputOffset) {
  builder.addFieldOffset(0, outputOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<number>} data
 * @returns {flatbuffers.Offset}
 */
model.BytesResponse.createOutputVector = function(builder, data) {
  builder.startVector(1, data.length, 1);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt8(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
model.BytesResponse.startOutputVector = function(builder, numElems) {
  builder.startVector(1, numElems, 1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} errorOffset
 */
model.BytesResponse.addError = function(builder, errorOffset) {
  builder.addFieldOffset(1, errorOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
model.BytesResponse.endBytesResponse = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} outputOffset
 * @param {flatbuffers.Offset} errorOffset
 * @returns {flatbuffers.Offset}
 */
model.BytesResponse.createBytesResponse = function(builder, outputOffset, errorOffset) {
  model.BytesResponse.startBytesResponse(builder);
  model.BytesResponse.addOutput(builder, outputOffset);
  model.BytesResponse.addError(builder, errorOffset);
  return model.BytesResponse.endBytesResponse(builder);
}

/**
 * @constructor
 */
model.BoolResponse = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {model.BoolResponse}
 */
model.BoolResponse.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {model.BoolResponse=} obj
 * @returns {model.BoolResponse}
 */
model.BoolResponse.getRootAsBoolResponse = function(bb, obj) {
  return (obj || new model.BoolResponse).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {model.BoolResponse=} obj
 * @returns {model.BoolResponse}
 */
model.BoolResponse.getSizePrefixedRootAsBoolResponse = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new model.BoolResponse).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {boolean}
 */
model.BoolResponse.prototype.output = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;
};

/**
 * @param {boolean} value
 * @returns {boolean}
 */
model.BoolResponse.prototype.mutate_output = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 4);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt8(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
model.BoolResponse.prototype.error = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
model.BoolResponse.startBoolResponse = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {boolean} output
 */
model.BoolResponse.addOutput = function(builder, output) {
  builder.addFieldInt8(0, +output, +false);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} errorOffset
 */
model.BoolResponse.addError = function(builder, errorOffset) {
  builder.addFieldOffset(1, errorOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
model.BoolResponse.endBoolResponse = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {boolean} output
 * @param {flatbuffers.Offset} errorOffset
 * @returns {flatbuffers.Offset}
 */
model.BoolResponse.createBoolResponse = function(builder, output, errorOffset) {
  model.BoolResponse.startBoolResponse(builder);
  model.BoolResponse.addOutput(builder, output);
  model.BoolResponse.addError(builder, errorOffset);
  return model.BoolResponse.endBoolResponse(builder);
}

/**
 * @constructor
 */
model.KeyPairResponse = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {model.KeyPairResponse}
 */
model.KeyPairResponse.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {model.KeyPairResponse=} obj
 * @returns {model.KeyPairResponse}
 */
model.KeyPairResponse.getRootAsKeyPairResponse = function(bb, obj) {
  return (obj || new model.KeyPairResponse).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {model.KeyPairResponse=} obj
 * @returns {model.KeyPairResponse}
 */
model.KeyPairResponse.getSizePrefixedRootAsKeyPairResponse = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new model.KeyPairResponse).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {model.KeyPair=} obj
 * @returns {model.KeyPair|null}
 */
model.KeyPairResponse.prototype.output = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? (obj || new model.KeyPair).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
model.KeyPairResponse.prototype.error = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
model.KeyPairResponse.startKeyPairResponse = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} outputOffset
 */
model.KeyPairResponse.addOutput = function(builder, outputOffset) {
  builder.addFieldOffset(0, outputOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} errorOffset
 */
model.KeyPairResponse.addError = function(builder, errorOffset) {
  builder.addFieldOffset(1, errorOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
model.KeyPairResponse.endKeyPairResponse = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} outputOffset
 * @param {flatbuffers.Offset} errorOffset
 * @returns {flatbuffers.Offset}
 */
model.KeyPairResponse.createKeyPairResponse = function(builder, outputOffset, errorOffset) {
  model.KeyPairResponse.startKeyPairResponse(builder);
  model.KeyPairResponse.addOutput(builder, outputOffset);
  model.KeyPairResponse.addError(builder, errorOffset);
  return model.KeyPairResponse.endKeyPairResponse(builder);
}

/**
 * @constructor
 */
model.KeyPair = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {model.KeyPair}
 */
model.KeyPair.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {model.KeyPair=} obj
 * @returns {model.KeyPair}
 */
model.KeyPair.getRootAsKeyPair = function(bb, obj) {
  return (obj || new model.KeyPair).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {model.KeyPair=} obj
 * @returns {model.KeyPair}
 */
model.KeyPair.getSizePrefixedRootAsKeyPair = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new model.KeyPair).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
model.KeyPair.prototype.publicKey = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
model.KeyPair.prototype.privateKey = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
model.KeyPair.startKeyPair = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} publicKeyOffset
 */
model.KeyPair.addPublicKey = function(builder, publicKeyOffset) {
  builder.addFieldOffset(0, publicKeyOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} privateKeyOffset
 */
model.KeyPair.addPrivateKey = function(builder, privateKeyOffset) {
  builder.addFieldOffset(1, privateKeyOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
model.KeyPair.endKeyPair = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} publicKeyOffset
 * @param {flatbuffers.Offset} privateKeyOffset
 * @returns {flatbuffers.Offset}
 */
model.KeyPair.createKeyPair = function(builder, publicKeyOffset, privateKeyOffset) {
  model.KeyPair.startKeyPair(builder);
  model.KeyPair.addPublicKey(builder, publicKeyOffset);
  model.KeyPair.addPrivateKey(builder, privateKeyOffset);
  return model.KeyPair.endKeyPair(builder);
}

/**
 * @constructor
 */
model.PublicKeyMetadata = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {model.PublicKeyMetadata}
 */
model.PublicKeyMetadata.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {model.PublicKeyMetadata=} obj
 * @returns {model.PublicKeyMetadata}
 */
model.PublicKeyMetadata.getRootAsPublicKeyMetadata = function(bb, obj) {
  return (obj || new model.PublicKeyMetadata).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {model.PublicKeyMetadata=} obj
 * @returns {model.PublicKeyMetadata}
 */
model.PublicKeyMetadata.getSizePrefixedRootAsPublicKeyMetadata = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new model.PublicKeyMetadata).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
model.PublicKeyMetadata.prototype.keyID = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
model.PublicKeyMetadata.prototype.keyIDShort = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
model.PublicKeyMetadata.prototype.creationTime = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
model.PublicKeyMetadata.prototype.fingerprint = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
model.PublicKeyMetadata.prototype.keyIDNumeric = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @returns {boolean}
 */
model.PublicKeyMetadata.prototype.isSubKey = function() {
  var offset = this.bb.__offset(this.bb_pos, 14);
  return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;
};

/**
 * @param {boolean} value
 * @returns {boolean}
 */
model.PublicKeyMetadata.prototype.mutate_isSubKey = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 14);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt8(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {flatbuffers.Builder} builder
 */
model.PublicKeyMetadata.startPublicKeyMetadata = function(builder) {
  builder.startObject(6);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} keyIDOffset
 */
model.PublicKeyMetadata.addKeyID = function(builder, keyIDOffset) {
  builder.addFieldOffset(0, keyIDOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} keyIDShortOffset
 */
model.PublicKeyMetadata.addKeyIDShort = function(builder, keyIDShortOffset) {
  builder.addFieldOffset(1, keyIDShortOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} creationTimeOffset
 */
model.PublicKeyMetadata.addCreationTime = function(builder, creationTimeOffset) {
  builder.addFieldOffset(2, creationTimeOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} fingerprintOffset
 */
model.PublicKeyMetadata.addFingerprint = function(builder, fingerprintOffset) {
  builder.addFieldOffset(3, fingerprintOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} keyIDNumericOffset
 */
model.PublicKeyMetadata.addKeyIDNumeric = function(builder, keyIDNumericOffset) {
  builder.addFieldOffset(4, keyIDNumericOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {boolean} isSubKey
 */
model.PublicKeyMetadata.addIsSubKey = function(builder, isSubKey) {
  builder.addFieldInt8(5, +isSubKey, +false);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
model.PublicKeyMetadata.endPublicKeyMetadata = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} keyIDOffset
 * @param {flatbuffers.Offset} keyIDShortOffset
 * @param {flatbuffers.Offset} creationTimeOffset
 * @param {flatbuffers.Offset} fingerprintOffset
 * @param {flatbuffers.Offset} keyIDNumericOffset
 * @param {boolean} isSubKey
 * @returns {flatbuffers.Offset}
 */
model.PublicKeyMetadata.createPublicKeyMetadata = function(builder, keyIDOffset, keyIDShortOffset, creationTimeOffset, fingerprintOffset, keyIDNumericOffset, isSubKey) {
  model.PublicKeyMetadata.startPublicKeyMetadata(builder);
  model.PublicKeyMetadata.addKeyID(builder, keyIDOffset);
  model.PublicKeyMetadata.addKeyIDShort(builder, keyIDShortOffset);
  model.PublicKeyMetadata.addCreationTime(builder, creationTimeOffset);
  model.PublicKeyMetadata.addFingerprint(builder, fingerprintOffset);
  model.PublicKeyMetadata.addKeyIDNumeric(builder, keyIDNumericOffset);
  model.PublicKeyMetadata.addIsSubKey(builder, isSubKey);
  return model.PublicKeyMetadata.endPublicKeyMetadata(builder);
}

/**
 * @constructor
 */
model.PrivateKeyMetadata = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {model.PrivateKeyMetadata}
 */
model.PrivateKeyMetadata.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {model.PrivateKeyMetadata=} obj
 * @returns {model.PrivateKeyMetadata}
 */
model.PrivateKeyMetadata.getRootAsPrivateKeyMetadata = function(bb, obj) {
  return (obj || new model.PrivateKeyMetadata).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {model.PrivateKeyMetadata=} obj
 * @returns {model.PrivateKeyMetadata}
 */
model.PrivateKeyMetadata.getSizePrefixedRootAsPrivateKeyMetadata = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new model.PrivateKeyMetadata).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
model.PrivateKeyMetadata.prototype.keyID = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
model.PrivateKeyMetadata.prototype.keyIDShort = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
model.PrivateKeyMetadata.prototype.creationTime = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
model.PrivateKeyMetadata.prototype.fingerprint = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
model.PrivateKeyMetadata.prototype.keyIDNumeric = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @returns {boolean}
 */
model.PrivateKeyMetadata.prototype.isSubKey = function() {
  var offset = this.bb.__offset(this.bb_pos, 14);
  return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;
};

/**
 * @param {boolean} value
 * @returns {boolean}
 */
model.PrivateKeyMetadata.prototype.mutate_isSubKey = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 14);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt8(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {boolean}
 */
model.PrivateKeyMetadata.prototype.encrypted = function() {
  var offset = this.bb.__offset(this.bb_pos, 16);
  return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;
};

/**
 * @param {boolean} value
 * @returns {boolean}
 */
model.PrivateKeyMetadata.prototype.mutate_encrypted = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 16);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt8(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {flatbuffers.Builder} builder
 */
model.PrivateKeyMetadata.startPrivateKeyMetadata = function(builder) {
  builder.startObject(7);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} keyIDOffset
 */
model.PrivateKeyMetadata.addKeyID = function(builder, keyIDOffset) {
  builder.addFieldOffset(0, keyIDOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} keyIDShortOffset
 */
model.PrivateKeyMetadata.addKeyIDShort = function(builder, keyIDShortOffset) {
  builder.addFieldOffset(1, keyIDShortOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} creationTimeOffset
 */
model.PrivateKeyMetadata.addCreationTime = function(builder, creationTimeOffset) {
  builder.addFieldOffset(2, creationTimeOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} fingerprintOffset
 */
model.PrivateKeyMetadata.addFingerprint = function(builder, fingerprintOffset) {
  builder.addFieldOffset(3, fingerprintOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} keyIDNumericOffset
 */
model.PrivateKeyMetadata.addKeyIDNumeric = function(builder, keyIDNumericOffset) {
  builder.addFieldOffset(4, keyIDNumericOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {boolean} isSubKey
 */
model.PrivateKeyMetadata.addIsSubKey = function(builder, isSubKey) {
  builder.addFieldInt8(5, +isSubKey, +false);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {boolean} encrypted
 */
model.PrivateKeyMetadata.addEncrypted = function(builder, encrypted) {
  builder.addFieldInt8(6, +encrypted, +false);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
model.PrivateKeyMetadata.endPrivateKeyMetadata = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} keyIDOffset
 * @param {flatbuffers.Offset} keyIDShortOffset
 * @param {flatbuffers.Offset} creationTimeOffset
 * @param {flatbuffers.Offset} fingerprintOffset
 * @param {flatbuffers.Offset} keyIDNumericOffset
 * @param {boolean} isSubKey
 * @param {boolean} encrypted
 * @returns {flatbuffers.Offset}
 */
model.PrivateKeyMetadata.createPrivateKeyMetadata = function(builder, keyIDOffset, keyIDShortOffset, creationTimeOffset, fingerprintOffset, keyIDNumericOffset, isSubKey, encrypted) {
  model.PrivateKeyMetadata.startPrivateKeyMetadata(builder);
  model.PrivateKeyMetadata.addKeyID(builder, keyIDOffset);
  model.PrivateKeyMetadata.addKeyIDShort(builder, keyIDShortOffset);
  model.PrivateKeyMetadata.addCreationTime(builder, creationTimeOffset);
  model.PrivateKeyMetadata.addFingerprint(builder, fingerprintOffset);
  model.PrivateKeyMetadata.addKeyIDNumeric(builder, keyIDNumericOffset);
  model.PrivateKeyMetadata.addIsSubKey(builder, isSubKey);
  model.PrivateKeyMetadata.addEncrypted(builder, encrypted);
  return model.PrivateKeyMetadata.endPrivateKeyMetadata(builder);
}

// Exports for Node.js and RequireJS
this.model = model;
