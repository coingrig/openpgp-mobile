/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: binding/openpgp_bridge/openpgp_bridge.i

package openpgp_bridge

/*
#define intgo swig_intgo
typedef void *swig_voidp;

#include <stdint.h>


typedef long long intgo;
typedef unsigned long long uintgo;



typedef struct { char *p; intgo n; } _gostring_;
typedef struct { void* array; intgo len; intgo cap; } _goslice_;


typedef _gostring_ swig_type_1;
typedef _gostring_ swig_type_2;
typedef _gostring_ swig_type_3;
typedef _gostring_ swig_type_4;
typedef _gostring_ swig_type_5;
typedef _gostring_ swig_type_6;
typedef _gostring_ swig_type_7;
typedef _gostring_ swig_type_8;
typedef _gostring_ swig_type_9;
typedef _gostring_ swig_type_10;
typedef _gostring_ swig_type_11;
typedef _gostring_ swig_type_12;
typedef _gostring_ swig_type_13;
typedef _gostring_ swig_type_14;
typedef _gostring_ swig_type_15;
typedef _gostring_ swig_type_16;
typedef _gostring_ swig_type_17;
typedef _gostring_ swig_type_18;
typedef _gostring_ swig_type_19;
typedef _gostring_ swig_type_20;
typedef _gostring_ swig_type_21;
typedef _gostring_ swig_type_22;
typedef _gostring_ swig_type_23;
typedef _gostring_ swig_type_24;
typedef _gostring_ swig_type_25;
extern void _wrap_Swig_free_openpgp_bridge_88449df1d0366082(uintptr_t arg1);
extern uintptr_t _wrap_Swig_malloc_openpgp_bridge_88449df1d0366082(swig_intgo arg1);
extern void _wrap_KeyPair_publicKey_set_openpgp_bridge_88449df1d0366082(uintptr_t arg1, swig_type_1 arg2);
extern swig_type_2 _wrap_KeyPair_publicKey_get_openpgp_bridge_88449df1d0366082(uintptr_t arg1);
extern void _wrap_KeyPair_privateKey_set_openpgp_bridge_88449df1d0366082(uintptr_t arg1, swig_type_3 arg2);
extern swig_type_4 _wrap_KeyPair_privateKey_get_openpgp_bridge_88449df1d0366082(uintptr_t arg1);
extern uintptr_t _wrap_new_KeyPair_openpgp_bridge_88449df1d0366082(void);
extern void _wrap_delete_KeyPair_openpgp_bridge_88449df1d0366082(uintptr_t arg1);
extern void _wrap_KeyOptions_hash_set_openpgp_bridge_88449df1d0366082(uintptr_t arg1, swig_type_5 arg2);
extern swig_type_6 _wrap_KeyOptions_hash_get_openpgp_bridge_88449df1d0366082(uintptr_t arg1);
extern void _wrap_KeyOptions_cipher_set_openpgp_bridge_88449df1d0366082(uintptr_t arg1, swig_type_7 arg2);
extern swig_type_8 _wrap_KeyOptions_cipher_get_openpgp_bridge_88449df1d0366082(uintptr_t arg1);
extern void _wrap_KeyOptions_compression_set_openpgp_bridge_88449df1d0366082(uintptr_t arg1, swig_type_9 arg2);
extern swig_type_10 _wrap_KeyOptions_compression_get_openpgp_bridge_88449df1d0366082(uintptr_t arg1);
extern void _wrap_KeyOptions_compressionLevel_set_openpgp_bridge_88449df1d0366082(uintptr_t arg1, swig_type_11 arg2);
extern swig_type_12 _wrap_KeyOptions_compressionLevel_get_openpgp_bridge_88449df1d0366082(uintptr_t arg1);
extern void _wrap_KeyOptions_rsaBits_set_openpgp_bridge_88449df1d0366082(uintptr_t arg1, swig_type_13 arg2);
extern swig_type_14 _wrap_KeyOptions_rsaBits_get_openpgp_bridge_88449df1d0366082(uintptr_t arg1);
extern uintptr_t _wrap_new_KeyOptions_openpgp_bridge_88449df1d0366082(void);
extern void _wrap_delete_KeyOptions_openpgp_bridge_88449df1d0366082(uintptr_t arg1);
extern void _wrap_Options_name_set_openpgp_bridge_88449df1d0366082(uintptr_t arg1, swig_type_15 arg2);
extern swig_type_16 _wrap_Options_name_get_openpgp_bridge_88449df1d0366082(uintptr_t arg1);
extern void _wrap_Options_comment_set_openpgp_bridge_88449df1d0366082(uintptr_t arg1, swig_type_17 arg2);
extern swig_type_18 _wrap_Options_comment_get_openpgp_bridge_88449df1d0366082(uintptr_t arg1);
extern void _wrap_Options_email_set_openpgp_bridge_88449df1d0366082(uintptr_t arg1, swig_type_19 arg2);
extern swig_type_20 _wrap_Options_email_get_openpgp_bridge_88449df1d0366082(uintptr_t arg1);
extern void _wrap_Options_passphrase_set_openpgp_bridge_88449df1d0366082(uintptr_t arg1, swig_type_21 arg2);
extern swig_type_22 _wrap_Options_passphrase_get_openpgp_bridge_88449df1d0366082(uintptr_t arg1);
extern void _wrap_Options_keyOptions_set_openpgp_bridge_88449df1d0366082(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_Options_keyOptions_get_openpgp_bridge_88449df1d0366082(uintptr_t arg1);
extern uintptr_t _wrap_new_Options_openpgp_bridge_88449df1d0366082(void);
extern void _wrap_delete_Options_openpgp_bridge_88449df1d0366082(uintptr_t arg1);
extern void _wrap_errorGenerateThrow_openpgp_bridge_88449df1d0366082(swig_type_23 arg1);
extern uintptr_t _wrap_create_keyPair_openpgp_bridge_88449df1d0366082(swig_type_24 arg1, swig_type_25 arg2);
#undef intgo
*/
import "C"

import "unsafe"
import _ "runtime/cgo"
import "sync"

type _ unsafe.Pointer

var Swig_escape_always_false bool
var Swig_escape_val interface{}

type _swig_fnptr *byte
type _swig_memberptr *byte

type _ sync.Mutex

type swig_gostring struct {
	p uintptr
	n int
}

func swigCopyString(s string) string {
	p := *(*swig_gostring)(unsafe.Pointer(&s))
	r := string((*[0x7fffffff]byte)(unsafe.Pointer(p.p))[:p.n])
	Swig_free(p.p)
	return r
}

func Swig_free(arg1 uintptr) {
	_swig_i_0 := arg1
	C._wrap_Swig_free_openpgp_bridge_88449df1d0366082(C.uintptr_t(_swig_i_0))
}

func Swig_malloc(arg1 int) (_swig_ret uintptr) {
	var swig_r uintptr
	_swig_i_0 := arg1
	swig_r = (uintptr)(C._wrap_Swig_malloc_openpgp_bridge_88449df1d0366082(C.swig_intgo(_swig_i_0)))
	return swig_r
}

type SwigcptrKeyPair uintptr

func (p SwigcptrKeyPair) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrKeyPair) SwigIsKeyPair() {
}

func (arg1 SwigcptrKeyPair) SetPublicKey(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_KeyPair_publicKey_set_openpgp_bridge_88449df1d0366082(C.uintptr_t(_swig_i_0), *(*C.swig_type_1)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrKeyPair) GetPublicKey() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_KeyPair_publicKey_get_openpgp_bridge_88449df1d0366082(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (arg1 SwigcptrKeyPair) SetPrivateKey(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_KeyPair_privateKey_set_openpgp_bridge_88449df1d0366082(C.uintptr_t(_swig_i_0), *(*C.swig_type_3)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrKeyPair) GetPrivateKey() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_KeyPair_privateKey_get_openpgp_bridge_88449df1d0366082(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func NewKeyPair() (_swig_ret KeyPair) {
	var swig_r KeyPair
	swig_r = (KeyPair)(SwigcptrKeyPair(C._wrap_new_KeyPair_openpgp_bridge_88449df1d0366082()))
	return swig_r
}

func DeleteKeyPair(arg1 KeyPair) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_KeyPair_openpgp_bridge_88449df1d0366082(C.uintptr_t(_swig_i_0))
}

type KeyPair interface {
	Swigcptr() uintptr
	SwigIsKeyPair()
	SetPublicKey(arg2 string)
	GetPublicKey() (_swig_ret string)
	SetPrivateKey(arg2 string)
	GetPrivateKey() (_swig_ret string)
}

type SwigcptrKeyOptions uintptr

func (p SwigcptrKeyOptions) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrKeyOptions) SwigIsKeyOptions() {
}

func (arg1 SwigcptrKeyOptions) SetHash(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_KeyOptions_hash_set_openpgp_bridge_88449df1d0366082(C.uintptr_t(_swig_i_0), *(*C.swig_type_5)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrKeyOptions) GetHash() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_KeyOptions_hash_get_openpgp_bridge_88449df1d0366082(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (arg1 SwigcptrKeyOptions) SetCipher(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_KeyOptions_cipher_set_openpgp_bridge_88449df1d0366082(C.uintptr_t(_swig_i_0), *(*C.swig_type_7)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrKeyOptions) GetCipher() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_KeyOptions_cipher_get_openpgp_bridge_88449df1d0366082(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (arg1 SwigcptrKeyOptions) SetCompression(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_KeyOptions_compression_set_openpgp_bridge_88449df1d0366082(C.uintptr_t(_swig_i_0), *(*C.swig_type_9)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrKeyOptions) GetCompression() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_KeyOptions_compression_get_openpgp_bridge_88449df1d0366082(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (arg1 SwigcptrKeyOptions) SetCompressionLevel(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_KeyOptions_compressionLevel_set_openpgp_bridge_88449df1d0366082(C.uintptr_t(_swig_i_0), *(*C.swig_type_11)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrKeyOptions) GetCompressionLevel() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_KeyOptions_compressionLevel_get_openpgp_bridge_88449df1d0366082(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (arg1 SwigcptrKeyOptions) SetRsaBits(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_KeyOptions_rsaBits_set_openpgp_bridge_88449df1d0366082(C.uintptr_t(_swig_i_0), *(*C.swig_type_13)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrKeyOptions) GetRsaBits() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_KeyOptions_rsaBits_get_openpgp_bridge_88449df1d0366082(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func NewKeyOptions() (_swig_ret KeyOptions) {
	var swig_r KeyOptions
	swig_r = (KeyOptions)(SwigcptrKeyOptions(C._wrap_new_KeyOptions_openpgp_bridge_88449df1d0366082()))
	return swig_r
}

func DeleteKeyOptions(arg1 KeyOptions) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_KeyOptions_openpgp_bridge_88449df1d0366082(C.uintptr_t(_swig_i_0))
}

type KeyOptions interface {
	Swigcptr() uintptr
	SwigIsKeyOptions()
	SetHash(arg2 string)
	GetHash() (_swig_ret string)
	SetCipher(arg2 string)
	GetCipher() (_swig_ret string)
	SetCompression(arg2 string)
	GetCompression() (_swig_ret string)
	SetCompressionLevel(arg2 string)
	GetCompressionLevel() (_swig_ret string)
	SetRsaBits(arg2 string)
	GetRsaBits() (_swig_ret string)
}

type SwigcptrOptions uintptr

func (p SwigcptrOptions) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrOptions) SwigIsOptions() {
}

func (arg1 SwigcptrOptions) SetName(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Options_name_set_openpgp_bridge_88449df1d0366082(C.uintptr_t(_swig_i_0), *(*C.swig_type_15)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrOptions) GetName() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_Options_name_get_openpgp_bridge_88449df1d0366082(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (arg1 SwigcptrOptions) SetComment(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Options_comment_set_openpgp_bridge_88449df1d0366082(C.uintptr_t(_swig_i_0), *(*C.swig_type_17)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrOptions) GetComment() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_Options_comment_get_openpgp_bridge_88449df1d0366082(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (arg1 SwigcptrOptions) SetEmail(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Options_email_set_openpgp_bridge_88449df1d0366082(C.uintptr_t(_swig_i_0), *(*C.swig_type_19)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrOptions) GetEmail() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_Options_email_get_openpgp_bridge_88449df1d0366082(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (arg1 SwigcptrOptions) SetPassphrase(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Options_passphrase_set_openpgp_bridge_88449df1d0366082(C.uintptr_t(_swig_i_0), *(*C.swig_type_21)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrOptions) GetPassphrase() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_Options_passphrase_get_openpgp_bridge_88449df1d0366082(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (arg1 SwigcptrOptions) SetKeyOptions(arg2 KeyOptions) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_Options_keyOptions_set_openpgp_bridge_88449df1d0366082(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrOptions) GetKeyOptions() (_swig_ret KeyOptions) {
	var swig_r KeyOptions
	_swig_i_0 := arg1
	swig_r = (KeyOptions)(SwigcptrKeyOptions(C._wrap_Options_keyOptions_get_openpgp_bridge_88449df1d0366082(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewOptions() (_swig_ret Options) {
	var swig_r Options
	swig_r = (Options)(SwigcptrOptions(C._wrap_new_Options_openpgp_bridge_88449df1d0366082()))
	return swig_r
}

func DeleteOptions(arg1 Options) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_Options_openpgp_bridge_88449df1d0366082(C.uintptr_t(_swig_i_0))
}

type Options interface {
	Swigcptr() uintptr
	SwigIsOptions()
	SetName(arg2 string)
	GetName() (_swig_ret string)
	SetComment(arg2 string)
	GetComment() (_swig_ret string)
	SetEmail(arg2 string)
	GetEmail() (_swig_ret string)
	SetPassphrase(arg2 string)
	GetPassphrase() (_swig_ret string)
	SetKeyOptions(arg2 KeyOptions)
	GetKeyOptions() (_swig_ret KeyOptions)
}

func ErrorGenerateThrow(arg1 string) {
	_swig_i_0 := arg1
	C._wrap_errorGenerateThrow_openpgp_bridge_88449df1d0366082(*(*C.swig_type_23)(unsafe.Pointer(&_swig_i_0)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
}

func Create_keyPair(arg1 string, arg2 string) (_swig_ret KeyPair) {
	var swig_r KeyPair
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (KeyPair)(SwigcptrKeyPair(C._wrap_create_keyPair_openpgp_bridge_88449df1d0366082(*(*C.swig_type_24)(unsafe.Pointer(&_swig_i_0)), *(*C.swig_type_25)(unsafe.Pointer(&_swig_i_1)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}
